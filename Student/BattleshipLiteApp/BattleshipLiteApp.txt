W.O.U.L.D Framework

WALK THRU THE PROJECT / OPEN THE REQUIREMENTS

Windows console app

Two player game

5x5 Grids A1..E5

Each player has 1 grid

Both players see the two independent grids

Game displays a 5x5 grid with H for hit, M for miss and blank for not fired upon

Error message if player chooses a hit or miss again

Each user inputs 5 grid locations where his ships are located

How to prevent other player from seeing my hidden ships? Type with no echo?

Ships cover a single grid location

Take turns asking for a grid location

If a hit update grid with an H

If a miss update grid with a M

First player to get 5 hits wins


USER INTERFACE DESIGN

Grids in fixed location on screen

    Player 1	    Player 2
   1 2 3 4 5       1 2 3 4 5
A  M M H H M     A H H H H H
B  M   H H M     B H H H H H
C  M M   M M     C H H H H H
D  M M M   M     D H H H H H
E  M M M H       E H H H H H

Player 1 place your five ships (Enter 5 codes from A1 to E5) :
Player 2 place your five ships (Enter 5 codes from A1 to E5) :

Player 1 take a shot: B2
It's a hit! or It's a miss!

Player 2 take a shot:
It's a hit! or It's a miss!

Player 2 You  Win! 

LOGIC DESIGN
  Big picture of how it fits together

  Start with empty grid with hidden ships
  When a spot is called
     If already H or M error msg
     If ship, change to hit, increment hit count
     If not ship change to miss
     increment turn count

  Game over if hit count reaches 5

DATA DESIGN
  What data do we need?

  BattleGrid class
  2 Instances
  5 x 5 array of ints where 0=miss, 1=hit, 2=ship, 3=no ship
  When called ship becomes hit and no ship becomes miss
  User sees on his grid blank, hit, miss
  Keep track of the number of turns for each player
  Get the final number of turns at end of game

  How does it connect together?

  Game starts with two empty grids
  Player 2 puts his ships into Player 1's grid
  Player 1 puts his ships into Player 2's grid
  Need to grids to remain in a fixed location on screen


WALK THROUGH THE PROJECT

To build a 2-player console game that has its roots in the game battleship from Mattel.
There will be a 25-spot grid (A1 - E5).  Each player will place 5 pegs on the board to
represent their 5 ships.  Players will then take turns firing on their opponents ships.
The first person to sink a 5 ships wins.

General Flow

Two users open up the console
Ask user 1 where to place their ships.
Ask user 2 where to place their ships.
Ask user 1 for a shot
    Determine hit or miss
    Determine if game is over
Ask user 2 for a shot
    Determine hit or miss
    Determine if game is over
Repeat until someone wins
Identify who the winner is.
Exit the application

Additional Questions / Requirements
1. Is it the same console or two different consoles working together?
2. Does the other player get one last chance after being sunk?
3. Do we want to capture/display statistics such as hit/miss ratio, etc.?


OPEN UP THE REQUIREMENTS

Additional Questions / Requirements
1. Is it the same console or two different consoles working together? Same console.
2. Does the other player get one last chance after being sunk? No
3. Do we want to capture/display statistics such as hit/miss ratio, etc.? Just how many shots it took to win.
4. Only one ship per spot.
5. Do we allow a player to shoot the same spot twice? NO  Will be able to see H or M.
6. Do we show a visual of the grid? YES
7. Do we store game data? NO
8. Are we ever going to change the number of players? Maybe
9. Will we add a computer player? Maybe

FULL REQUIREMENTS
1. 2-player game
2. 25 spot grid A1 - E5
3. Each player gets 5 ships
4. Each ship takes up one spot
5. Players take turns playing
6. First person to sink all 5 wins
7. One console for everyone
8. No completing the round after 5 sunk ships
9. Show a visual of the grid with hits and misses
10. Do not allow the user to shoot the same spot twice

USER INTERFACE


LOGIC DESIGN


DATA DESIGN