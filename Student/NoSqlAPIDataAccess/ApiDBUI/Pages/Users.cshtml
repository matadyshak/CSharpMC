@page
@model UsersModel
@{
    ViewData["Title"] = "User Management";
}

<h2>User Management</h2>

<table id="userTable" border="1" style="width:100%; margin-bottom: 20px;">
    <thead>
        <tr>
            <th>Id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email Addresses</th>
            <th>Phone Numbers</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<h3>Add / Edit User</h3>
<form id="userForm">
    <input type="hidden" id="userId" />
    <label>First Name: <input type="text" id="firstName" required /></label><br />
    <label>Last Name: <input type="text" id="lastName" required /></label><br />
    <label>Email Addresses (comma-separated): <input type="text" id="emailAddresses" required /></label><br />
    <label>Phone Numbers (comma-separated): <input type="text" id="phoneNumbers" required /></label><br />
    <button type="submit">Save</button>
    <button type="button" onclick="resetForm()">Cancel</button>
</form>

<script type="text/javascript">
    const apiUrl = '/api/users';

    async function loadUsers() {
        const response = await fetch(apiUrl);
        const users = await response.json();
        const tbody = document.querySelector('#userTable tbody');
        tbody.innerHTML = '';

        users.forEach(user => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${user.id}</td>
                <td>${user.firstName}</td>
                <td>${user.lastName}</td>
                <td>${user.emailAddresses.join(', ')}</td>
                <td>${user.phoneNumbers.join(', ')}</td>
                <td>
                    <button onclick='editUser(${JSON.stringify(user)})'>Edit</button>
                    <button onclick='deleteUser("${user.id}")'>Delete</button>
                </td>
            `;
            tbody.appendChild(row);
        });
    }

    async function deleteUser(id) {
        await fetch(\`\${apiUrl}/\${id}\`, { method: 'DELETE' });
        loadUsers();
    }

    function editUser(user) {
        document.getElementById('userId').value = user.id;
        document.getElementById('firstName').value = user.firstName;
        document.getElementById('lastName').value = user.lastName;
        document.getElementById('emailAddresses').value = user.emailAddresses.join(', ');
        document.getElementById('phoneNumbers').value = user.phoneNumbers.join(', ');
    }

    function resetForm() {
        document.getElementById('userForm').reset();
        document.getElementById('userId').value = '';
    }

    document.getElementById('userForm').addEventListener('submit', async function (e) {
        e.preventDefault();

        const id = document.getElementById('userId').value;
        const user = {
            firstName: document.getElementById('firstName').value,
            lastName: document.getElementById('lastName').value,
            emailAddresses: document.getElementById('emailAddresses').value.split(',').map(e => e.trim()),
            phoneNumbers: document.getElementById('phoneNumbers').value.split(',').map(p => p.trim())
        };

        if (id) {
            user.id = id;
            await fetch(\`\${apiUrl}/\${id}\`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(user)
            });
        } else {
            await fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(user)
            });
        }

        resetForm();
        loadUsers();
    });

    loadUsers();
</script>
